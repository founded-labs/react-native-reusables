{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dialog",
  "type": "registry:ui",
  "title": "Dialog",
  "author": "@mrzachnugent",
  "description": "A window overlaid on either the primary window or another dialog window, rendering the content underneath inert.",
  "dependencies": [
    "@rn-primitives/dialog"
  ],
  "registryDependencies": [
    "https://reactnativereusable.com/r/default/text.json",
    "https://reactnativereusable.com/r/default/icon.json"
  ],
  "files": [
    {
      "path": "./node_modules/@rnr/registry/src/default/components/ui/dialog.tsx",
      "content": "'use client';\n\nimport { Icon } from '@/registry/default/components/ui/icon';\nimport { NativeOnlyAnimatedView } from '@/registry/default/components/ui/native-only-animated-view';\nimport { cn } from '@/registry/default/lib/utils';\nimport * as DialogPrimitive from '@rn-primitives/dialog';\nimport { X } from 'lucide-react-native';\nimport * as React from 'react';\nimport { Platform, Text, View, type ViewProps } from 'react-native';\nimport { FadeIn, FadeOut } from 'react-native-reanimated';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nfunction DialogOverlay({\n  className,\n  children,\n  ...props\n}: DialogPrimitive.OverlayProps & {\n  ref?: React.RefObject<DialogPrimitive.OverlayRef>;\n  children?: React.ReactNode;\n}) {\n  return (\n    <DialogPrimitive.Overlay\n      className={cn(\n        'absolute top-0 left-0 right-0 bottom-0 z-50 bg-black/80 flex justify-center items-center p-2',\n        Platform.select({\n          web: 'fixed animate-in fade-in-0 cursor-default [&>*]:cursor-auto',\n        }),\n        className\n      )}\n      {...props}\n    >\n      <NativeOnlyAnimatedView entering={FadeIn} exiting={FadeOut.duration(150)}>\n        <>{children}</>\n      </NativeOnlyAnimatedView>\n    </DialogPrimitive.Overlay>\n  );\n}\nfunction DialogContent({\n  className,\n  portalHost,\n  children,\n  ...props\n}: DialogPrimitive.ContentProps & {\n  ref?: React.RefObject<DialogPrimitive.ContentRef>;\n  portalHost?: string;\n}) {\n  return (\n    <DialogPortal hostName={portalHost}>\n      <DialogOverlay>\n        <DialogPrimitive.Content\n          className={cn(\n            'bg-background z-50 flex flex-col max-w-lg gap-4 rounded-lg border border-border p-6 shadow-lg',\n            Platform.select({\n              web: 'animate-in fade-in-0 zoom-in-95 duration-200',\n            }),\n            className\n          )}\n          {...props}\n        >\n          <>{children}</>\n          <DialogPrimitive.Close\n            className={cn(\n              'absolute top-4 right-4 rounded opacity-70 active:opacity-100',\n              Platform.select({\n                web: 'ring-offset-background focus:ring-ring data-[state=open]:bg-accent transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-none',\n              })\n            )}\n          >\n            <Icon\n              as={X}\n              className={cn('text-accent-foreground web:pointer-events-none shrink-0 size-4')}\n            />\n            <Text className='sr-only'>Close</Text>\n          </DialogPrimitive.Close>\n        </DialogPrimitive.Content>\n      </DialogOverlay>\n    </DialogPortal>\n  );\n}\n\nfunction DialogHeader({ className, ...props }: ViewProps) {\n  return (\n    <View className={cn('flex flex-col gap-1.5 text-center sm:text-left', className)} {...props} />\n  );\n}\n\nfunction DialogFooter({ className, ...props }: ViewProps) {\n  return (\n    <View\n      className={cn('flex flex-col-reverse gap-2 sm:flex-row sm:justify-end', className)}\n      {...props}\n    />\n  );\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: DialogPrimitive.TitleProps & {\n  ref?: React.RefObject<DialogPrimitive.TitleRef>;\n}) {\n  return (\n    <DialogPrimitive.Title\n      className={cn('text-lg text-foreground font-semibold leading-none tracking-tight', className)}\n      {...props}\n    />\n  );\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: DialogPrimitive.DescriptionProps & {\n  ref?: React.RefObject<DialogPrimitive.DescriptionRef>;\n}) {\n  return (\n    <DialogPrimitive.Description\n      className={cn('text-muted-foreground text-sm', className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n};\n",
      "type": "registry:ui"
    }
  ]
}