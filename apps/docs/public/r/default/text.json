{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "text",
  "type": "registry:ui",
  "title": "Text",
  "author": "@mrzachnugent",
  "description": "A component for displaying text.",
  "dependencies": [
    "@rn-primitives/slot"
  ],
  "files": [
    {
      "path": "./node_modules/@rnr/registry/src/default/components/ui/text.tsx",
      "content": "'use client';\n\nimport { cn } from '@/registry/default/lib/utils';\nimport * as Slot from '@rn-primitives/slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\nimport { Platform, Text as RNText, type Role } from 'react-native';\n\nconst textVariants = cva(\n  cn(\n    'text-base text-foreground',\n    Platform.select({\n      web: 'select-text',\n    })\n  ),\n  {\n    variants: {\n      variant: {\n        default: '',\n        h1: cn(\n          'text-center text-4xl font-extrabold tracking-tight',\n          Platform.select({ web: 'scroll-m-20 text-balance' })\n        ),\n        h2: cn(\n          'border-b border-border pb-2 text-3xl font-semibold tracking-tight',\n          Platform.select({ web: 'scroll-m-20 first:mt-0' })\n        ),\n        h3: cn('text-2xl font-semibold tracking-tight', Platform.select({ web: 'scroll-m-20' })),\n        h4: cn('text-xl font-semibold tracking-tight', Platform.select({ web: 'scroll-m-20' })),\n        p: 'leading-7 mt-6',\n        blockquote: 'mt-4 sm:mt-6 border-l-2 pl-3 sm:pl-6 italic',\n        code: cn(\n          'bg-muted relative rounded px-[0.3rem] py-[0.2rem] text-sm font-semibold',\n          Platform.select({ android: 'font-sans', default: 'font-mono' })\n        ),\n        lead: 'text-muted-foreground text-xl',\n        large: 'text-lg font-semibold',\n        small: 'text-sm leading-none font-medium',\n        muted: 'text-muted-foreground text-sm',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nconst TextClassContext = React.createContext<string | undefined>(undefined);\n\nfunction Text({\n  className,\n  asChild = false,\n  variant = 'default',\n  ...props\n}: React.ComponentProps<typeof RNText> &\n  VariantProps<typeof textVariants> & {\n    ref?: React.RefObject<RNText>;\n    asChild?: boolean;\n  }) {\n  const textClass = React.useContext(TextClassContext);\n  const Component = asChild ? Slot.Text : RNText;\n  return (\n    <Component\n      {...getSemanticProps(variant)}\n      className={cn(textVariants({ variant }), textClass, className)}\n      {...props}\n    />\n  );\n}\n\nexport { Text, TextClassContext };\n\nfunction getSemanticProps(variant: VariantProps<typeof textVariants>['variant']) {\n  switch (variant) {\n    case 'h1':\n      return {\n        role: 'heading',\n        'aria-level': '1',\n      } as const;\n    case 'h2':\n      return {\n        role: 'heading',\n        'aria-level': '2',\n      } as const;\n    case 'h3':\n      return {\n        role: 'heading',\n        'aria-level': '3',\n      } as const;\n    case 'h4':\n      return {\n        role: 'heading',\n        'aria-level': '4',\n      } as const;\n    case 'blockquote':\n      return Platform.select({ web: { role: 'blockquote' as Role } });\n    case 'code':\n      return Platform.select({ web: { role: 'code' as Role } });\n    default:\n      return {};\n  }\n}\n",
      "type": "registry:ui"
    }
  ]
}