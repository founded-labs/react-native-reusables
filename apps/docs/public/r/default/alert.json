{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "alert",
  "type": "registry:ui",
  "title": "Alert",
  "author": "@mrzachnugent",
  "description": "Displays a callout for user attention.",
  "registryDependencies": [
    "https://reactnativereusables.com/r/default/text.json",
    "https://reactnativereusables.com/r/default/icon.json"
  ],
  "files": [
    {
      "path": "./node_modules/@rnr/registry/src/default/components/ui/alert.tsx",
      "content": "import { Icon } from '@/registry/default/components/ui/icon';\nimport { Text, TextClassContext } from '@/registry/default/components/ui/text';\nimport { cn } from '@/registry/default/lib/utils';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport type { LucideIcon } from 'lucide-react-native';\nimport * as React from 'react';\nimport { View, type ViewProps } from 'react-native';\n\nconst alertVariants = cva('border-border relative w-full rounded-lg border p-4', {\n  variants: {\n    variant: {\n      default: 'bg-background',\n      destructive: 'border-destructive/50 dark:border-destructive',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n  },\n});\n\nfunction Alert({\n  className,\n  variant,\n  children,\n  icon,\n  iconClassName,\n  ...props\n}: ViewProps &\n  VariantProps<typeof alertVariants> &\n  React.RefAttributes<View> & {\n    icon: LucideIcon;\n    iconClassName?: string;\n  }) {\n  return (\n    <TextClassContext.Provider\n      value={cn('text-foreground', variant === 'destructive' && 'text-destructive', className)}>\n      <View role=\"alert\" className={alertVariants({ variant, className })} {...props}>\n        <View className=\"absolute left-4 top-4\">\n          <Icon\n            as={icon}\n            className={cn('size-4', variant === 'destructive' && 'text-destructive', iconClassName)}\n          />\n        </View>\n        {children}\n      </View>\n    </TextClassContext.Provider>\n  );\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<typeof Text>) {\n  return (\n    <Text\n      className={cn('mb-1 pl-7 font-medium leading-none tracking-tight', className)}\n      {...props}\n    />\n  );\n}\n\nfunction AlertDescription({ className, ...props }: React.ComponentProps<typeof Text>) {\n  const textClass = React.useContext(TextClassContext);\n  return (\n    <Text\n      className={cn(\n        'text-foreground pl-7 text-sm leading-relaxed',\n        textClass?.includes('text-destructive') && 'text-destructive',\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Alert, AlertDescription, AlertTitle };\n",
      "type": "registry:ui"
    }
  ]
}